{
  "folders": [
    {
      "path": "."
    }
  ],
  "settings": {
      "explorer.confirmDelete": false,
      "code-runner.runInTerminal": true,
      "editor.formatOnSave": true,
      "files.autoSave": "afterDelay",
      "C_Cpp.codeAnalysis.clangTidy.headerFilter": "",
      "terminal.integrated.profiles.windows": {
        "PowerShell": {
          "source": "PowerShell",
          "icon": "terminal-powershell"
        },
        "Command Prompt": {
          "path": [
            "${env:windir}\\Sysnative\\cmd.exe",
            "${env:windir}\\System32\\cmd.exe"
          ],
          "args": [],
          "icon": "terminal-cmd"
        },
        "Git Bash": {
          "source": "Git Bash"
        },
        "Windows PowerShell": {
          "path": "C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\powershell.exe"
        }
      },
      "terminal.integrated.defaultProfile.windows": "Command Prompt",
      "settingsSync.ignoredExtensions": [],
      "explorer.confirmDragAndDrop": false,
      "[css]": {
        "editor.defaultFormatter": "vscode.css-language-features"
      },
      "[html]": {
        "editor.defaultFormatter": "vscode.html-language-features"
      },
      "editor.stickyScroll.enabled": true,
      "workbench.iconTheme": "Monokai Pro (Filter Spectrum) Icons",
      "workbench.colorTheme": "Dracula",
      "todohighlight.isEnable": true,
      // "todo-tree.regex.regex": "(?:(?://|#|<!--|;|/\\*\\*?|\\*)\\s*($TAGS)|^\\s*- \\[ \\])"
      "todo-tree.regex.regex": "((//|#|;|\\*)[ ]*($TAGS)[^\\n]*)|(/\\*(\\*?\\s*)*($TAGS)(.|\\n|\\r)*?\\*/)|(<!--\\s*($TAGS)(.|\\n|\\r)*?-->)",
      "todo-tree.highlights.defaultHighlight": {
        "icon": "alert",
        "type": "text",
        "foreground": "#ff0263",
        "background": "white",
        "opacity": 50,
        "iconColour": "blue"
      },
      "todo-tree.general.tagGroups": {
        "FIXME": [
          "FIXME",
          "FIXIT",
          "FIX",
          "NOTE"
        ]
      },
      "todo-tree.highlights.customHighlight": {
        "TODO": {
          "icon": "check",
          "type": "line"
        },
        "FIXME": {
          "type": "line",
          "foreground": "#00189e",
          "iconColour": "yellow",
          "gutterIcon": true
        }
      },
      "indentRainbow.includedLanguages": [
        "python",
        "html",
        "css",
        "cpp"
      ],
      "indentRainbow.errorColor": "rgb(255, 66, 71, 0.12)",
      "indentRainbow.colors": [
        "rgba(255, 0, 212, 0.08)",
        "rgba(0, 21, 255, 0.08)",
        "rgba(0, 255, 179, 0.08)",
        // "rgba(43, 255, 0, 0.08)",
        // "rgba(255, 225, 0, 0.08)",
        "rgba(250, 0, 75, 0.08)"
      ],
      "git.ignoreMissingGitWarning": true,
      "terminal.integrated.fontFamily": "JetBrains Mono",
      "editor.letterSpacing": 0.3,
      "editor.fontLigatures": true,
      "tabnine.experimentalAutoImports": true,
      "editor.fontFamily": "'JetBrains Mono'",
      "[python]": {
        "editor.formatOnType": true
      },
      "json.schemas": [],
      "[javascript]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
      },
      "code-runner.executorMap": {
        //g++ LabGraphics2.cpp -o LabGraphics2 -lgdi32  
        "javascript": "node",
        "java": "cd $dir && javac $fileName && java $fileNameWithoutExt",
        "c": "cd $dir && gcc $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "zig": "zig run",
        "cpp": "cd $dir && g++ $fileName -o $fileNameWithoutExt -lgdi32 && $dir$fileNameWithoutExt ",
        "objective-c": "cd $dir && gcc -framework Cocoa $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "php": "php",
        "python": "python -u",
        "perl": "perl",
        "perl6": "perl6",
        "ruby": "ruby",
        "go": "go run",
        "lua": "lua",
        "groovy": "groovy",
        "powershell": "powershell -ExecutionPolicy ByPass -File",
        "bat": "cmd /c",
        "shellscript": "bash",
        "fsharp": "fsi",
        "csharp": "scriptcs",
        "vbscript": "cscript //Nologo",
        "typescript": "ts-node",
        "coffeescript": "coffee",
        "scala": "scala",
        "swift": "swift",
        "julia": "julia",
        "crystal": "crystal",
        "ocaml": "ocaml",
        "r": "Rscript",
        "applescript": "osascript",
        "clojure": "lein exec",
        "haxe": "haxe --cwd $dirWithoutTrailingSlash --run $fileNameWithoutExt",
        "rust": "cd $dir && rustc $fileName && $dir$fileNameWithoutExt",
        "racket": "racket",
        "scheme": "csi -script",
        "ahk": "autohotkey",
        "autoit": "autoit3",
        "dart": "dart",
        "pascal": "cd $dir && fpc $fileName && $dir$fileNameWithoutExt",
        "d": "cd $dir && dmd $fileName && $dir$fileNameWithoutExt",
        "haskell": "runghc",
        "nim": "nim compile --verbosity:0 --hints:off --run",
        "lisp": "sbcl --script",
        "kit": "kitc --run",
        "v": "v run",
        "sass": "sass --style expanded",
        "scss": "scss --style expanded",
        "less": "cd $dir && lessc $fileName $fileNameWithoutExt.css",
        "FortranFreeForm": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "fortran-modern": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "fortran_fixed-form": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "fortran": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "sml": "cd $dir && sml $fileName"
      },
      "code-runner.executorMapByGlob": {
        "pom.xml": "cd $dir && mvn clean package"
      },
      "git.enableSmartCommit": true,
      "gopls": { "ui.semanticTokens": true,
        "formatting.gofumpt": true,
      },
      "[go]": {
        "editor.defaultFormatter": "golang.go",
        "editor.inlayHints.enabled":"offUnlessPressed",
        "editor.inlayHints.fontSize": 10
        //"editor.suggest.showInlineDetails": true
      },
      "go.inlayHints.assignVariableTypes": true,
      "go.inlayHints.compositeLiteralFields": true,
      "go.inlayHints.compositeLiteralTypes": true,
      "go.inlayHints.constantValues": true,
      "go.inlayHints.functionTypeParameters":true, 
      "go.inlayHints.parameterNames": true,
      "go.inlayHints.rangeVariableTypes": true,
    }
    // "rgba(255,255,64, 0.12)",
    // "rgba(127,255,127, 0.12)",
    // "rgba(255,127,255, 0.12)",
    // "rgba(79,236,236, 0.12)"
}
